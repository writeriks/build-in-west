import { useUser } from "@auth0/nextjs-auth0/client";
import Head from "next/head";
import { api } from "../utils/api";
import { useEffect, useState } from "react";
import authenticationService from "../service/authentication-service.ts/authentication-service";
import { type Auth0User, type FacebookUser } from "../types";
import { type User } from "@prisma/client";

export default function Home() {
  const { user, error, isLoading } = useUser();
  const [didSaveUser, setDidSaveUser] = useState(false);

  const { data: dbUser } = api.user.getUser.useQuery({
    id: user?.sid as string,
  });
  console.log("ðŸš€ ~ file: index.tsx:16 ~ Home ~ dbUser:", dbUser);
  const userMutation = api.user.addUser.useMutation({});

  useEffect(() => {
    const addNewUser = async () => {
      if (!didSaveUser && !dbUser && user && !isLoading && !error) {
        setDidSaveUser(true);
        const databaseUser: User =
          authenticationService.generateUserByAuthenticationType(
            user as Auth0User | FacebookUser
          );

        //@ts-ignore
        await userMutation.mutateAsync(databaseUser);
      }
    };
    void addNewUser();
  }, [didSaveUser, dbUser, user, isLoading, error, userMutation]);

  return (
    <>
      <Head>
        <title>BuildInWest</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        {user?.email ? (
          <a href="/api/auth/logout">Logout</a>
        ) : (
          <a href="/api/auth/login">Login</a>
        )}
      </main>
    </>
  );
}
