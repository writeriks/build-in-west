import Head from "next/head";

import { getSession, withPageAuthRequired } from "@auth0/nextjs-auth0";

import { PrismaClient, type User } from "@prisma/client";

export const Home = ({ dbUser }: { dbUser: User }) => {
  console.log("ðŸš€ ~ file: index.tsx:8 ~ Home ~ dbUser:", dbUser);
  return (
    <>
      <Head>
        <title>BuildInWest</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        {dbUser && (
          <div>
            <h1 className="text-2xl font-bold">Welcome {dbUser.name}</h1>
            <a href="/api/auth/logout">Logout</a>
          </div>
        )}
      </main>
    </>
  );
};
// test
export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps({ req, res }) {
    const session = await getSession(req, res);
    const prisma = new PrismaClient();
    const dbUser = await prisma.user.findUnique({
      where: {
        email: session?.user.email as string,
      },
    });
    await prisma.$disconnect();
    return {
      props: { dbUser: JSON.parse(JSON.stringify(dbUser)) as User },
    };
  },
});

export default Home;
